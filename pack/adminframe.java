/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pack;

import java.io.IOException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Connection;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JScrollBar;
import javax.swing.table.DefaultTableModel;
import static pack.connect.conn;

/**
 *
 * @author Yash
 */
public class adminframe extends javax.swing.JFrame {

    /**
     * Creates new form adminframe
     */
    Connection conn = null;
    public adminframe() {
        initComponents();
        scroll.repaint();
        scroll.revalidate();
        conn = connect.connectdb();
        userpanel.setVisible(true);
        dbpanel.setVisible(false);
        
        scroll.setVerticalScrollBar(new ScrollBarCustom());
        ScrollBarCustom sp = new ScrollBarCustom();
        sp.setOrientation(JScrollBar.HORIZONTAL);
        scroll.setHorizontalScrollBar(sp);
    }

    /**
     * This method is called from within the constructor to initialize the form.WARNING: Do NOT modify this code.
     * The content of this method is always
 regenerated by the Form Editor.
     * @param no
     */
    public void adminname(int no){
        try{
            String search = "SELECT aName FROM admins WHERE adminId = ?;";
            PreparedStatement pst = conn.prepareStatement(search);
            pst.setInt(1,no);
            ResultSet rs = pst.executeQuery();
            if (rs.next()){
                String nm = rs.getString("aName");
                adname.setText(nm);
                adname.revalidate();
                adname.repaint();
            }
            conn.commit();
            JOptionPane.showMessageDialog(null,"name updated", "success", JOptionPane.INFORMATION_MESSAGE);

        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null,e.getMessage(), "failed", JOptionPane.INFORMATION_MESSAGE);

        }
    }
    
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        adminmenu = new javax.swing.JPanel();
        userviewtab = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        newadmin = new javax.swing.JButton();
        appointmenttab = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        adname = new javax.swing.JLabel();
        scroll = new javax.swing.JScrollPane();
        mainScrollPanel = new javax.swing.JPanel();
        userpanel = new javax.swing.JPanel();
        image = new javax.swing.JLabel();
        flname = new javax.swing.JLabel();
        astatus = new javax.swing.JLabel();
        mnum = new javax.swing.JLabel();
        pstatus = new javax.swing.JLabel();
        email = new javax.swing.JLabel();
        updateeligibility = new javax.swing.JButton();
        mailApp = new javax.swing.JButton();
        urno = new javax.swing.JLabel();
        us = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        check = new javax.swing.JButton();
        mra_pol = new javax.swing.JButton();
        dbpanel = new javax.swing.JPanel();
        usapp = new javax.swing.JTextField();
        checkapp = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        apptable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        status = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        type = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        tel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        adminmenu.setBackground(new java.awt.Color(0, 109, 119));

        userviewtab.setBackground(new java.awt.Color(131, 197, 190));
        userviewtab.setForeground(new java.awt.Color(255, 255, 255));
        userviewtab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userviewtabMouseClicked(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Users");

        javax.swing.GroupLayout userviewtabLayout = new javax.swing.GroupLayout(userviewtab);
        userviewtab.setLayout(userviewtabLayout);
        userviewtabLayout.setHorizontalGroup(
            userviewtabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userviewtabLayout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        userviewtabLayout.setVerticalGroup(
            userviewtabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, userviewtabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                .addContainerGap())
        );

        newadmin.setBackground(new java.awt.Color(0, 109, 119));
        newadmin.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        newadmin.setForeground(new java.awt.Color(255, 255, 255));
        newadmin.setText("+ create a new admin");
        newadmin.setBorder(null);
        newadmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newadminActionPerformed(evt);
            }
        });

        appointmenttab.setBackground(new java.awt.Color(131, 197, 190));
        appointmenttab.setPreferredSize(new java.awt.Dimension(232, 50));
        appointmenttab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                appointmenttabMouseClicked(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Manage Appointments");

        javax.swing.GroupLayout appointmenttabLayout = new javax.swing.GroupLayout(appointmenttab);
        appointmenttab.setLayout(appointmenttabLayout);
        appointmenttabLayout.setHorizontalGroup(
            appointmenttabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(appointmenttabLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(57, Short.MAX_VALUE))
        );
        appointmenttabLayout.setVerticalGroup(
            appointmenttabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, appointmenttabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                .addContainerGap())
        );

        adname.setFont(new java.awt.Font("BIZ UDPGothic", 0, 24)); // NOI18N
        adname.setForeground(new java.awt.Color(255, 255, 255));
        adname.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        adname.setText("username");

        javax.swing.GroupLayout adminmenuLayout = new javax.swing.GroupLayout(adminmenu);
        adminmenu.setLayout(adminmenuLayout);
        adminmenuLayout.setHorizontalGroup(
            adminmenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(userviewtab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(newadmin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(appointmenttab, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
            .addGroup(adminmenuLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(adname, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        adminmenuLayout.setVerticalGroup(
            adminmenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminmenuLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(adname, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(userviewtab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(appointmenttab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(newadmin, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );

        scroll.setBackground(new java.awt.Color(0, 102, 102));
        scroll.setMaximumSize(new java.awt.Dimension(1167, 658));
        scroll.setPreferredSize(new java.awt.Dimension(858, 658));
        scroll.setRequestFocusEnabled(false);

        mainScrollPanel.setBackground(new java.awt.Color(255, 51, 102));
        mainScrollPanel.setMaximumSize(new java.awt.Dimension(1167, 658));
        mainScrollPanel.setPreferredSize(new java.awt.Dimension(1167, 658));

        userpanel.setBackground(new java.awt.Color(237, 246, 249));

        image.setBackground(new java.awt.Color(204, 204, 255));
        image.setText("the image");
        image.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        flname.setFont(new java.awt.Font("Century Gothic", 1, 48)); // NOI18N
        flname.setText("Yashodha Indeewari");

        astatus.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        astatus.setText("new/renew applicant");

        mnum.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        mnum.setText("mobile no");

        pstatus.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        pstatus.setText("passport status");

        email.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        email.setText("email");

        updateeligibility.setBackground(new java.awt.Color(0, 102, 102));
        updateeligibility.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        updateeligibility.setForeground(new java.awt.Color(255, 255, 255));
        updateeligibility.setText("update the eligibility");
        updateeligibility.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateeligibilityActionPerformed(evt);
            }
        });

        mailApp.setBackground(new java.awt.Color(0, 102, 102));
        mailApp.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        mailApp.setForeground(new java.awt.Color(255, 255, 255));
        mailApp.setText("mail the applicant");
        mailApp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mailAppActionPerformed(evt);
            }
        });

        urno.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        urno.setText("user reference no");

        us.setOpaque(true);
        us.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel11.setText("Enter the user reference no. to see application details.");

        check.setBackground(new java.awt.Color(0, 102, 102));
        check.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        check.setForeground(new java.awt.Color(255, 255, 255));
        check.setText("Check");
        check.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkActionPerformed(evt);
            }
        });

        mra_pol.setBackground(new java.awt.Color(0, 102, 102));
        mra_pol.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        mra_pol.setForeground(new java.awt.Color(255, 255, 255));
        mra_pol.setText("Mail RA & Police");
        mra_pol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mra_polActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout userpanelLayout = new javax.swing.GroupLayout(userpanel);
        userpanel.setLayout(userpanelLayout);
        userpanelLayout.setHorizontalGroup(
            userpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userpanelLayout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addGroup(userpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(userpanelLayout.createSequentialGroup()
                        .addGroup(userpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addGroup(userpanelLayout.createSequentialGroup()
                                .addComponent(us, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addComponent(check, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(userpanelLayout.createSequentialGroup()
                        .addComponent(image, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addGroup(userpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(userpanelLayout.createSequentialGroup()
                                .addComponent(flname, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                            .addGroup(userpanelLayout.createSequentialGroup()
                                .addGroup(userpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(mnum, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(astatus, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pstatus, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(urno, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                                .addGroup(userpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, userpanelLayout.createSequentialGroup()
                                        .addComponent(mailApp, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(161, 161, 161))
                                    .addGroup(userpanelLayout.createSequentialGroup()
                                        .addGroup(userpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(updateeligibility)
                                            .addComponent(mra_pol, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addContainerGap())))))))
        );
        userpanelLayout.setVerticalGroup(
            userpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userpanelLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel11)
                .addGap(18, 18, 18)
                .addGroup(userpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(us, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(check, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(userpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(image, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(userpanelLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(flname, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(userpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(userpanelLayout.createSequentialGroup()
                                .addComponent(mailApp, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(updateeligibility, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(mra_pol, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(userpanelLayout.createSequentialGroup()
                                .addComponent(urno)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(astatus, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(mnum)
                                .addGap(18, 18, 18)
                                .addComponent(email)
                                .addGap(18, 18, 18)
                                .addComponent(pstatus)))))
                .addContainerGap(181, Short.MAX_VALUE))
        );

        dbpanel.setBackground(new java.awt.Color(237, 246, 249));

        checkapp.setBackground(new java.awt.Color(0, 102, 102));
        checkapp.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        checkapp.setForeground(new java.awt.Color(255, 255, 255));
        checkapp.setText("Check");
        checkapp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkappActionPerformed(evt);
            }
        });

        apptable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NIC", "AppointmentDate", "AppointmentTime"
            }
        ));
        jScrollPane1.setViewportView(apptable);

        jScrollPane2.setViewportView(jScrollPane1);

        jLabel1.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel1.setText("Passport  Status :");

        status.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        status.setText("status");

        jLabel4.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel4.setText("Applicant type :");

        type.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        type.setText("Type");

        jLabel7.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel7.setText("Mobile No. :");

        tel.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        tel.setText("0");

        javax.swing.GroupLayout dbpanelLayout = new javax.swing.GroupLayout(dbpanel);
        dbpanel.setLayout(dbpanelLayout);
        dbpanelLayout.setHorizontalGroup(
            dbpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dbpanelLayout.createSequentialGroup()
                .addGroup(dbpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dbpanelLayout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addGroup(dbpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 553, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(dbpanelLayout.createSequentialGroup()
                                .addComponent(usapp, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(checkapp, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(dbpanelLayout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addGroup(dbpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(dbpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(44, 44, 44)
                        .addGroup(dbpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(type, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                            .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(544, Short.MAX_VALUE))
        );
        dbpanelLayout.setVerticalGroup(
            dbpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dbpanelLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(dbpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usapp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkapp, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55)
                .addGroup(dbpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(status))
                .addGap(36, 36, 36)
                .addGroup(dbpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(type))
                .addGap(35, 35, 35)
                .addGroup(dbpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(tel))
                .addGap(53, 53, 53)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(152, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout mainScrollPanelLayout = new javax.swing.GroupLayout(mainScrollPanel);
        mainScrollPanel.setLayout(mainScrollPanelLayout);
        mainScrollPanelLayout.setHorizontalGroup(
            mainScrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1167, Short.MAX_VALUE)
            .addGroup(mainScrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(dbpanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(mainScrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(userpanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        mainScrollPanelLayout.setVerticalGroup(
            mainScrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 658, Short.MAX_VALUE)
            .addGroup(mainScrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(dbpanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(mainScrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(userpanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        scroll.setViewportView(mainScrollPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(adminmenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 1032, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(adminmenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(scroll, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newadminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newadminActionPerformed
        admin l = new admin();
        l.setVisible(true);
    }//GEN-LAST:event_newadminActionPerformed

    private void updateeligibilityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateeligibilityActionPerformed
        connect ob = new connect();
        connect.connectdb();
        
        try {
            String sql = "SELECT pstatus FROM users WHERE nic = ?;";
            PreparedStatement pst = conn.prepareStatement(sql);
            pst.setString(1, us.getText());
            ResultSet r = pst.executeQuery();
            if(r.next()){
                String st = r.getString("pstatus");
                if ("applied".equals(st)){
                    pstatus.setText("Eligible");
                    String id = us.getText();
                    ob.eligibilityup(id);
                }
                else{
                    JOptionPane.showMessageDialog(null,"This applicant is yet to be applied", "failed", JOptionPane.ERROR_MESSAGE);
                }
            }
        } 
        catch (SQLException e) {
            JOptionPane.showMessageDialog(null,e.getMessage(), "failed", JOptionPane.INFORMATION_MESSAGE);
        }
        
        
    }//GEN-LAST:event_updateeligibilityActionPerformed

    private void mailAppActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mailAppActionPerformed
        connect ob = new connect();
        connect.connectdb();
        
        String m = email.getText();
        String ref = urno.getText();
        ob.userMail(m, ref);//mail here?
    }//GEN-LAST:event_mailAppActionPerformed

    private void usActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usActionPerformed

    private void userviewtabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userviewtabMouseClicked
        userpanel.setVisible(true);
        dbpanel.setVisible(false);
    }//GEN-LAST:event_userviewtabMouseClicked

    private void appointmenttabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_appointmenttabMouseClicked
        userpanel.setVisible(false);
        dbpanel.setVisible(true);
        
        //showtabledata
        try{
            String view = "SELECT * FROM appointment;";
            PreparedStatement viewpst = conn.prepareStatement(view);
            ResultSet r = viewpst.executeQuery();
            
            while(r.next()){
                String id = r.getString("nic");
                String date = r.getString("appDate");
                String time = r.getString("appTime");
                
                String tbdata[] = {id,date,time};
                DefaultTableModel table = (DefaultTableModel)apptable.getModel();
                table.addRow(tbdata);
            }
            
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null,e.getMessage(), "Failed", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_appointmenttabMouseClicked

    private void mra_polActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mra_polActionPerformed
        connect ob = new connect();
        connect.connectdb();
        
        ob.sendmail(us.getText());//mail here?
    }//GEN-LAST:event_mra_polActionPerformed

    private void checkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkActionPerformed
        connect ob = new connect();
        connect.connectdb();

        try {
            String search = "SELECT nic, fname, lname, mobileno, email, pstatus FROM users WHERE nic = ?;";
            PreparedStatement pst = conn.prepareStatement(search);
            pst.setString(1,us.getText());
            ResultSet rs = pst.executeQuery();
            if (rs.next()) { // Use if instead of while if you're expecting one record
                urno.setText(rs.getString("nic"));
                String f = rs.getString("fname");
                String l = rs.getString("lname");
                String fl = f+" "+l;
                flname.setText(fl);
                // Convert int to String for the mobile number
                mnum.setText(Integer.toString(rs.getInt("mobileno")));
                email.setText(rs.getString("email"));
                pstatus.setText(rs.getString("pstatus")); 
            }
        }
        catch (SQLException e) {
            System.out.println(e.getMessage()); // Properly handle exception
        }
    
    
        try{
            String search = "SELECT appType FROM application WHERE nic = ?;";
            PreparedStatement pst = conn.prepareStatement(search);
            pst.setString(1, us.getText());
            ResultSet rs = pst.executeQuery();
            if(search.isBlank()){
                astatus.setText("New Applicant");
            }  
            else{
                if (rs.next()){
                    astatus.setText(rs.getString("appType")+" Applicant");
                }
            }
        }
        catch(SQLException e){
                System.out.println(e.getMessage());
        } 
        
        ob.image(us.getText(), image);
    }//GEN-LAST:event_checkActionPerformed

    private void checkappActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkappActionPerformed
        try{
            String view1 = "SELECT pstatus, a.mobileno, appType FROM users u, application a WHERE u.nic = ? AND u.nic = a.nic;";
            PreparedStatement viewpst = conn.prepareStatement(view1);
            viewpst.setString(1, usapp.getText());
            ResultSet r = viewpst.executeQuery();
            if (!r.isBeforeFirst()) { // Check if the ResultSet is empty
                // Set labels to default values
                status.setText("Status"); // Replace "Default Status" with the actual default value
                tel.setText("0"); // Replace "Default Tel" with the actual default value
                type.setText("Type"); // Replace "Default Type" with the actual default value
               
                JOptionPane.showMessageDialog(null, "This applicant has not applied", "No Application Found", JOptionPane.ERROR_MESSAGE);
            } 
            else {
                while(r.next()){
                    String st = r.getString("pstatus");
                    String telno = r.getString("mobileno");
                    String t = r.getString("appType");

                    status.setText(st);
                    tel.setText(telno);
                    type.setText(t);
                }
            } 
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null,e.getMessage(), "Failed", JOptionPane.ERROR_MESSAGE);
        }
        
        
        try{
            String view = "SELECT * FROM appointment WHERE nic = ?;";
            PreparedStatement viewpst = conn.prepareStatement(view);
            viewpst.setString(1, usapp.getText());
            ResultSet r = viewpst.executeQuery();
            
            while(r.next()){
                String id = r.getString("nic");
                String date = r.getString("appDate");
                String time = r.getString("appTime");
                
                String tbdata[] = {id,date,time};
                DefaultTableModel table = (DefaultTableModel)apptable.getModel();
                table.setRowCount(0);
                table.addRow(tbdata);
            }
            
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null,e.getMessage(), "Failed", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_checkappActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(adminframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(adminframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(adminframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(adminframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new adminframe().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel adminmenu;
    private javax.swing.JLabel adname;
    private javax.swing.JPanel appointmenttab;
    private javax.swing.JTable apptable;
    private javax.swing.JLabel astatus;
    private javax.swing.JButton check;
    private javax.swing.JButton checkapp;
    private javax.swing.JPanel dbpanel;
    private javax.swing.JLabel email;
    private javax.swing.JLabel flname;
    private javax.swing.JLabel image;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton mailApp;
    private javax.swing.JPanel mainScrollPanel;
    private javax.swing.JLabel mnum;
    private javax.swing.JButton mra_pol;
    private javax.swing.JButton newadmin;
    private javax.swing.JLabel pstatus;
    private javax.swing.JScrollPane scroll;
    private javax.swing.JLabel status;
    private javax.swing.JLabel tel;
    private javax.swing.JLabel type;
    private javax.swing.JButton updateeligibility;
    private javax.swing.JLabel urno;
    private javax.swing.JTextField us;
    private javax.swing.JTextField usapp;
    private javax.swing.JPanel userpanel;
    private javax.swing.JPanel userviewtab;
    // End of variables declaration//GEN-END:variables
}
